on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
  workflow_dispatch:

name: Tests

permissions:
  contents: read

jobs:
  windows-powershell:
    name: Windows PowerShell 5.1
    runs-on: windows-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install dependencies
        shell: powershell
        run: |
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
          if (-not (Get-Module -ListAvailable -Name Pester)) {
              Install-Module -Name Pester -MinimumVersion 5.4.0 -Force -SkipPublisherCheck
          }
          if (-not (Get-Module -ListAvailable -Name PSScriptAnalyzer)) {
              Install-Module -Name PSScriptAnalyzer -Force -SkipPublisherCheck
          }

      - name: Run Pester tests
        shell: powershell
        run: |
          Import-Module Pester
          $configuration = New-PesterConfiguration
          $configuration.Run.Path = './Tests'
          $configuration.Output.Verbosity = 'Detailed'
          $configuration.TestResult.Enabled = $true
          $configuration.TestResult.OutputPath = 'test-results.xml'
          Invoke-Pester -Configuration $configuration

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: test-results-windows-51
          path: test-results.xml

      - name: Run script analyzer
        shell: powershell
        run: |
          Import-Module PSScriptAnalyzer
          $params = @{
              Path          = './ColorScripts-Enhanced'
              Settings      = './PSScriptAnalyzerSettings.psd1'
              Recurse       = $true
              ReportSummary = $true
          }
          $params.Severity = @('Error','Warning')
          $results = Invoke-ScriptAnalyzer @params
          if ($results) {
              $results | Format-Table -AutoSize
              throw 'ScriptAnalyzer reported findings.'
          }

      - name: Validate help topics
        shell: powershell
        run: |
          Import-Module ./ColorScripts-Enhanced -Force
          Get-Help Show-ColorScript
          Get-Help about_ColorScripts-Enhanced

  pwsh-cross-platform:
    name: PowerShell 7.5 (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Verify PowerShell version
        shell: pwsh
        run: |
          $PSVersionTable.PSVersion
          Write-Host "PowerShell $($PSVersionTable.PSVersion) detected"

      - name: Install dependencies
        shell: pwsh
        run: |
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
          if (-not (Get-Module -ListAvailable -Name Pester)) {
              Install-Module -Name Pester -MinimumVersion 5.4.0 -Force -SkipPublisherCheck
          }
          if (-not (Get-Module -ListAvailable -Name PSScriptAnalyzer)) {
              Install-Module -Name PSScriptAnalyzer -Force -SkipPublisherCheck
          }

      - name: Run Pester tests
        shell: pwsh
        run: |
          Import-Module Pester
          $configuration = New-PesterConfiguration
          $configuration.Run.Path = './Tests'
          $configuration.Output.Verbosity = 'Detailed'
          $configuration.TestResult.Enabled = $true
          $configuration.TestResult.OutputPath = 'test-results.xml'
          Invoke-Pester -Configuration $configuration

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: test-results-${{ matrix.os }}-pwsh
          path: test-results.xml

      - name: Run script analyzer
        shell: pwsh
        run: |
          Import-Module PSScriptAnalyzer
          $params = @{
              Path          = './ColorScripts-Enhanced'
              Settings      = './PSScriptAnalyzerSettings.psd1'
              Recurse       = $true
              ReportSummary = $true
          }
          $params.Severity = @('Error','Warning')
          $results = Invoke-ScriptAnalyzer @params
          if ($results) {
              $results | Format-Table -AutoSize
              throw 'ScriptAnalyzer reported findings.'
          }

      - name: Validate help topics
        shell: pwsh
        run: |
          Import-Module ./ColorScripts-Enhanced -Force
          Get-Help Show-ColorScript
          Get-Help about_ColorScripts-Enhanced
